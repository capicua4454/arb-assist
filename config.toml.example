rpc_url = "http://nl.deez.top:80"                 # RPC endpoint for retrieving data
grpc_url = "http://nl.grpc.deez.top:10001"        # GRPC endpoint for streaming transactions
grpc_token = ""                                   # GRPC or ThorStreamer X-Token
grpc_engine = "yellowstone"                       # GRPC engine: "yellowstone" or "thor"
# "smb" to generate *.toml file for SolanaMevBot smb-onchain or "na" to generate *.json file for NotArb onchain-bot or "both"
mode = "smb"
helius_key = ""                                   # Helius API key for dynamic priority fee estimation

filter_programs = false                           # If true, only include transactions from arb_programs
arb_programs = [
  "MEViEnscUm6tsQRoGd9h6nLQaQspKj7DB2M5FwM3Xvz",   # Solana MEV Bot (on-chain)
  "MEVbwoHUDJNcxZHFFg4XsyuQmBUeXEHFLNqXH635Sgi",   # Solana MEV Bot (Jupiter)
  "FAMBuBHJ1U8DUeY3HNGuW9XsCM4bPZKYk9NXSyR2W2zd",   # NotArb
  "3HXfeBuc1aPwAvBsdReNXKa7j1jSP3khbHbWCVkU8hUu",   # RM4 (Example)
  "King7ki4SKMBPb3iupnQwTyjsq294jaXsgLmJo8cb7T",    # 7dGr (Example)
  "A6PDFLzh3VbkFn6aJmHe2LSd5kaYe8bmsQc6yPjinpC2",   # CKWX (Example)
  "E6kDzoUtNHuk7kyNzK9XUzqi5H3NfvhcXhKv4ToDDW1L",   # CG8n (Example)
  "6MWVTis8rmmk6Vt9zmAJJbmb3VuLpzoQ1aHH4N6wQEGh",   # CzYQ (Example)
  "MEDALksSEYQQUBsyjSjmhE1ib6Cn7bRV48MYGQ5oQGY",    # E8bT (Example)
  "Crf6uiMVHpuqkQzE2FkWWces3xiYaTbTsFYPDSeNWksM",   # EVyb (Example)
  "9XFCiGhW1Pkx7rGgNcMH3S9bqDjKwgjqqM2cb2YdzpJ3",   # HxkT (Example)
  "Dd5uZwHr4bZYnkSzHwRaaq5BEvS5NHsJZErKJu7YSjhg",   # 3pjW (Example)
]
exclude_mints = [                                 # Intermedium mints to exclude
  "So11111111111111111111111111111111111111112",
  "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
]
output = "smb-config"                             # Output config filename. Will automatically append ".toml" to file name
period = 60000                                    # Interval to regenerate config (ms)
halflife = 300000                                 # Interval to decay accumulated statistics by half
# If you use Jito with no_failure_mode = false, you can set ignore_filters = true to use any mints found even if they don't pass your filters
# This will keep your bot running even as long as there are arbable mints with at least 2 pools, even if they dont pass filters
ignore_filters = false
min_roi = 4                                       # Minimum ROI required (over defined period)
# min_roi does not work with ThorStreamer because it doesn't stream failed transactions used to calculate total priority fees
min_txns = 20                                     # Minimum number of transactions for a mint
min_net_volume = 10000000000                      # Minimum net volume (in lamports) *Normalized to volume per minute
mints_num = 2                                     # Number of top mints to include in your config
# Set to true to generate separate configs for each mint. Only works if merge_mints = false.
# Will append "_1", "_2", "_3", etc. to the filename e.g. "smb-config_1.toml", "smb-config_2.toml"
separate_configs = false
min_process_delay = 400                           # Minimum spam delay per mint (ms)
max_process_delay = 1200                          # Maximum spam delay per mint (ms)

min_cu_percentile = 25                            # Min Helius percentile for CU pricing
max_cu_percentile = 75                            # Max Helius percentile for CU pricing
min_cu_price = 10000                              # Minimum compute unit price
max_cu_price = 1000000                            # Maximum compute unit price
cu_strategy = "Linear"                            # CU price strategy: Random / Linear / Exponential

min_tx_count = 1                                  # Minimum spam TX count per mint
max_tx_count = 4                                  # Maximum spam TX count per mint
max_cu_limit = 600000                             # Maximum compute unit limit

top_pool_num = 2                                  # Number of top pools to include *Must be 2 or more

config_rpc_url = "http://utah.deez.top:80"        # RPC for smb-onchain to use with generated config
sending_rpc_urls = [
  "http://main.deez.top:80",                      # RPCs used for sending transactions
]

cetiloan = true                                   # Enable flashloan
merge_mints = true                                # Enable merged mint spam
spam = true                                       # Enable spam behavior

# WSOl: So11111111111111111111111111111111111111112 or USDC: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
base_mint = "So11111111111111111111111111111111111111112"
memo = "smb-copy by capicua"                                         # Set the memo

# ALUTs Configuration
aluts_per_mint = 10
aluts = [
  "4sKLJ1Qoudh8PJyqBeuKocYdsZvxTcRShUt9aKqwhgvC"  # Additional ALUTs to include
]

# Jito Configuration
jito = false                                       # Enable Jito strategy support
jito_strategy = "Random"                          # Jito strategy: Random / Linear / Exponential
jito_min_tip = 10000                              # Minimum tip for Jito transactions
jito_max_tip = 100000                             # Maximum tip for Jito transactions
use_dynamic_jito_tip = true                       # Set to true if you want to use dynamic jito tips
jito_min_tip_percentile = 50                      # Minimum percentile of dynamic jito tip
jito_max_tip_percentile = 75                      # Maximum percentile of dynamic jito tip
jito_count = 1                                    # Number of Jito transactions to send per cycle
jito_uuid = ""                                    # UUID for Jito instance identification
jito_ips = [
  "192.168.1.0/24"                                # IP ranges for Jito nodes
]
jito_min_profit = 10000                           # Minimum profit threshold for Jito transactions
jito_use_min_profit = true                        # Use minimum profit check for Jito
jito_use_separate_tip_account = true              # Use a separate tip account for Jito transactions
block_engine_strategy = "OneByOne"                # "OneByOne" or "AllAtOnce"
# Enable no_failure_mode for Jito. This will cause all your Jito txs to succeed and consume your Jito tip.
no_failure_mode = false
jito_urls = [                                     # URLs for Jito Block Engines to use
  "https://ny.mainnet.block-engine.jito.wtf/api/v1",
  "https://tokyo.mainnet.block-engine.jito.wtf/api/v1",
  "https://slc.mainnet.block-engine.jito.wtf/api/v1",
  "https://amsterdam.mainnet.block-engine.jito.wtf/api/v1",
  "https://frankfurt.mainnet.block-engine.jito.wtf/api/v1",
  "https://london.mainnet.block-engine.jito.wtf/api/v1",
]
